#!/usr/bin/env ruby

ENV["RAILS_ENV"] ||= "production"

root = File.expand_path(File.join(File.dirname(__FILE__), '..'))
require File.join(root, "config", "boot")
require File.join(root, "config", "environment")

TweetStream.configure do |config|
  config.consumer_key       = ENV['TWITTER_CONSUMER_KEY']
  config.consumer_secret    = ENV['TWITTER_CONSUMER_SECRET']
  config.oauth_token        = ENV['TWITTER_ACCESS_TOKEN']
  config.oauth_token_secret = ENV['TWITTER_ACCESS_SECRET']
  config.auth_method        = :oauth
end

def topics
  Topic.all.map(&:title)
end

daemon = TweetStream::Daemon.new('tracker', :log_output => true, :log_dir => '/var/www/twitter_analyser/current/log/')
def start_tracking(daemon)
  puts "start tracking"
  daemon.track(topics) do |tweet|
    puts "New Tweet #{tweet.id}"
    AddTweetJob.perform_async(tweet.to_json)
  end
end

daemon.on_inited do
  ActiveRecord::Base.connection.reconnect!
  EM::PeriodicTimer.new(905) do
    puts "stopped tracking, restarting"
    daemon.stop
    sleep(10)
    start_tracking(daemon)
  end

  puts "Started tracking topics: #{topics.join(", ")}"
end

daemon.on_reconnect do |timeout, retries|
  puts "Reconnecting in #{timeout} seconds, retry number #{retries}"
end

daemon.on_unauthorized do
  puts "Could not authorize with twitter."
end

start_tracking(daemon)

